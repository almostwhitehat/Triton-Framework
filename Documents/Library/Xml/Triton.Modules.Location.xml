<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Triton.Modules.Location</name>
    </assembly>
    <members>
        <member name="T:Triton.Location.Logic.GetCountriesAction">
            <summary>
            Returns a SearchResult of type Country into the request.
            </summary>
        </member>
        <member name="M:Triton.Location.Logic.GetCountriesAction.#ctor">
            <summary>
            Default constructor for GetCountriesAction.
            </summary>
        </member>
        <member name="P:Triton.Location.Logic.GetCountriesAction.CountryItemNameOut">
            <summary>
            Request item name for SearchResult Country output.
            </summary>
        </member>
        <member name="T:Triton.Location.Logic.GetCountriesAction.Events">
            <summary>
            Event names to return to the controller.
            </summary>
        </member>
        <member name="M:Triton.Location.Model.Address.ToString(System.String)">
            <summary>
            Formats the Name.
            the default format is prefix{p} first{f} middle{m} last{l} suffix{s}.
            </summary>
            <param name="format">
            the following formatting directives can be used to create a different result
            example ToString("{l}, {f} {m}") ==&gt; Smith, Jim R.
            <b>{l1}</b> the Address.Line1 value
            <b>{l2}</b> the Address.Line2 value
            <b>{l3}</b> the Address.Line3 value
            <b>{c}</b> the Address.CityName value
            <b>{s}</b> the Address.StateName value
            <b>{p}</b> the Address.PostalCodeName value
            <b>{la}</b> the Address.GeoLocation.Latitude value
            <b>{lo}</b> the Address.GeoLocation.Longitude value
            <b>{gps}</b> the Address.GeoLocation.ToString() value
            </param>
            <returns>
            The formatted string of the name.
            </returns>
        </member>
        <member name="M:Triton.Location.Model.Address.ToString">
            <summary> Formats the Name in the default format (prefix first middle last suffix).
            </summary>
            <returns> The formatted string of the name.
            </returns>
        </member>
        <member name="T:Triton.Location.Model.Countries">
            <summary>
            
            </summary>
        </member>
        <member name="M:Triton.Location.Model.Countries.LoadCountries">
            <summary>
            Loads the states from the database and populates singleton
            </summary>
        </member>
        <member name="P:Triton.Location.Model.Countries.Item(System.Int32)">
            <summary>
            Indexer to get Country by ID
            </summary>
            <param name="id"></param>
        </member>
        <member name="T:Triton.Location.Model.Dao.IPersistedAddressDao">
            <summary>
            Defines the contract of how PersistedAddress is retrieved, persisted and deleted.
            </summary>
        </member>
        <member name="M:Triton.Location.Model.Dao.IPersistedAddressDao.Get(System.Int64)">
            <summary>
            Gets the PersistedAddress by id.
            </summary>
            <param name="id">Id of the PersistedAddress to retrieve.</param>
            <returns>PersistedAddress object.</returns>
        </member>
        <member name="M:Triton.Location.Model.Dao.IPersistedAddressDao.Get(Triton.Location.Model.PersistedAddress)">
            <summary>
            Gets the list of PersistedAddresss by example.
            </summary>
            <param name="example">Example object of PersistedAddress.</param>
            <returns>List of PersistedAddress matching the example.</returns>
        </member>
        <member name="M:Triton.Location.Model.Dao.IPersistedAddressDao.Save(Triton.Location.Model.PersistedAddress)">
            <summary>
            Saves the PersistedAddress.
            </summary>
            <param name="persistedAddress">PersistedAddress object to save.</param>
        </member>
        <member name="M:Triton.Location.Model.Dao.IPersistedAddressDao.Save(System.Collections.Generic.IList{Triton.Location.Model.PersistedAddress})">
            <summary>
            Saves list of PersistedAddress.
            </summary>
            <param name="persistedAddresses">List of PersistedAddresss to save.</param>
        </member>
        <member name="M:Triton.Location.Model.Dao.IPersistedAddressDao.Delete(Triton.Location.Model.PersistedAddress)">
            <summary>
            Deletes the PersistedAddress.
            </summary>
            <param name="persistedAddress">PersistedAddress object to delete.</param>
        </member>
        <member name="M:Triton.Location.Model.Dao.IPersistedAddressDao.GetFilter">
            <summary>
            Get the filter.
            </summary>
        </member>
        <member name="M:Triton.Location.Model.Dao.IPersistedAddressDao.Find(Triton.Location.Model.Dao.PersistedAddressFilter)">
            <summary>
            Find persistedAddresss by filter
            </summary>
            <param name="filter">Filter with the criteria to search</param>
            <returns>SearchResult of PersistedAddress</returns>
        </member>
        <member name="T:Triton.Location.Model.States">
            <summary>
            Singleton for storing location states for use in the deserialize address
            </summary>
        </member>
        <member name="M:Triton.Location.Model.States.LoadStates">
            <summary>
            Loads the states from the database and populates singleton
            </summary>
        </member>
        <member name="P:Triton.Location.Model.States.Item(System.Int32)">
            <summary>
            Indexer to get a State by ID
            </summary>
            <param name="id">The ID of the state to get</param>
            <returns>The State with the given ID</returns>
        </member>
        <member name="P:Triton.Location.Model.States.Item(System.String)">
            <summary>
            Indexer to get a State by Code
            </summary>
            <param name="code">The ID of the state to get</param>
            <returns>The State with the given Code</returns>
        </member>
        <member name="T:Triton.Location.Support.Request.Deserialize">
            <summary>
            Helper class to take parameters from the request and generate objects to save/update.
            For use with Triton.Location module.
            </summary>
        </member>
        <member name="M:Triton.Location.Support.Request.Deserialize.CreatePersistedAddress(Triton.Controller.Request.MvcRequest)">
            <summary>
            Creates a new <c>PersistedAddress</c> from the request.
            </summary>
            <param name="request">Request to create the PersistedAddress from.</param>
            <returns>A populated PersistedAddress object.</returns>
        </member>
        <member name="T:Triton.Location.Support.Request.ParameterNames.PersistedAddress">
            <summary>
            Definitions for Fields and Filters of Persisted Address
            </summary>
        </member>
        <member name="T:Triton.Location.Support.Request.ParameterNames.PersistedAddress.Field">
            <summary>
            Fields for Persisted Address
            </summary>
        </member>
        <member name="T:Triton.Location.Support.Request.ParameterNames.PersistedAddress.Filter">
            <summary>
            Filters for Persisted Address
            </summary>
        </member>
    </members>
</doc>
