<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Triton.Extensions.Web</name>
    </assembly>
    <members>
        <member name="T:Triton.Web.View.Controls.Pagination">
            <summary>
            Paging control to use on search result thumbnails.
            </summary>
        </member>
        <member name="M:Triton.Web.View.Controls.Pagination.#ctor">
            <summary>
            Default constructor takes zero arguments.
            </summary>
        </member>
        <member name="M:Triton.Web.View.Controls.Pagination.IncludeParameter(System.String)">
            <summary>
            Determines if the parameter is should be included in the rendered tag.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:Triton.Web.View.Controls.Pagination.DisplayOptions">
            <summary>
            Display Options are set on the control by comma separated list and will render in the order
            they are given.
            Options are: Numbers,Next,Prev,First,Last
            </summary>
        </member>
        <member name="P:Triton.Web.View.Controls.Pagination.Title">
            <summary>
            The title tag to be rendered on all links
            </summary>
        </member>
        <member name="P:Triton.Web.View.Controls.Pagination.LinkClass">
            <summary>
            Class name to be rendered on the anchor items for styling.
            Defaults to pageLink
            </summary>
        </member>
        <member name="P:Triton.Web.View.Controls.Pagination.NextRenderName">
            <summary>
            Text to render for the "next" link.
            Defaults to "Next"
            </summary>
        </member>
        <member name="P:Triton.Web.View.Controls.Pagination.NextClass">
            <summary>
            The name of the class to render on the "next" link.
            </summary>
        </member>
        <member name="P:Triton.Web.View.Controls.Pagination.PrevClass">
            <summary>
            The name of the class to render on the "prev" link.
            </summary>
        </member>
        <member name="P:Triton.Web.View.Controls.Pagination.PrevRenderName">
            <summary>
            Text to render for the "prev" link.
            Defaults to "Prev"
            </summary>
        </member>
        <member name="P:Triton.Web.View.Controls.Pagination.CurrentLinkClass">
            <summary>
            Class name to be rendered on the currently selected link
            Defaults to currentPageLink
            </summary>
        </member>
        <member name="P:Triton.Web.View.Controls.Pagination.RequestItemName">
            <summary>
            Name of the item in the request that contains the paged search results.
            </summary>
        </member>
        <member name="P:Triton.Web.View.Controls.Pagination.TransitionName">
            <summary>
            Transition event for each page link.
            </summary>
        </member>
        <member name="P:Triton.Web.View.Controls.Pagination.PageParameterPrefix">
            <summary>
            Prefix added to pagesize and page for sorting a particulate item type.
            </summary>
        </member>
        <member name="P:Triton.Web.View.Controls.Pagination.PageParameterName">
            <summary>
            Gets or sets the name of the request parameter for the page number.
            </summary>
        </member>
        <member name="P:Triton.Web.View.Controls.Pagination.PageSizeParameterName">
            <summary>
            Gets or sets the name of the request parameter for the page size.
            </summary>
        </member>
        <member name="P:Triton.Web.View.Controls.Pagination.PageNumberDisplaySize">
            <summary>
            
            </summary>
        </member>
        <member name="P:Triton.Web.View.Controls.Pagination.PageNumberDisplayStyle">
            <summary>
            Takes a string: "Center", "Right", or "Left" and denotes which side of the
            page control the currently selected page is placed at.
            </summary>
        </member>
        <member name="P:Triton.Web.View.Controls.Pagination.Page">
            <summary>
            The current WebPage.
            </summary>
        </member>
        <member name="P:Triton.Web.View.Controls.Pagination.AdditionalParameters">
            <summary>
            Additional Parameters to append in search criteria
            </summary>
        </member>
        <member name="P:Triton.Web.View.Controls.Pagination.ResetUrlParameters">
            <summary>
            Boolean value that, if set to true, will set the baseUrl to "/"
            </summary>
        </member>
        <member name="P:Triton.Web.View.Controls.Pagination.RenderPageSizeSelection">
            <summary>
            Boolean value that determines if a page size control is rendered on the page.
            The values for the control are listed in the page's content copy under
            "PageSizeSelectorCopy".  Choices are defaulted to increment from 0 to 5.
            </summary>
        </member>
        <member name="P:Triton.Web.View.Controls.Pagination.ParametersToExclude">
            <summary>
            Comma seperated list of request Parameters to be removed from the url
            </summary>
        </member>
        <member name="T:Triton.Web.View.WebPage">
            <summary>
            WebPage is the base class for all pages using the Web infrastructure.
            </summary>
            <author>Scott Dyke</author>
        </member>
        <member name="M:Triton.Web.View.WebPage.#ctor">
            <summary>
            WebPage object.
            </summary>
        </member>
        <member name="M:Triton.Web.View.WebPage.HasErrors">
            <summary>
            Indicates whether or not there are any (validation) errors returned
            from the controller.
            </summary>
            <returns><c>True</c> if the page has errors to display, <c>false</c>
            		if not.</returns>
        </member>
        <member name="M:Triton.Web.View.WebPage.LoadControlXml(System.String)">
            <summary>
            Loads a control's content XML into the page's content XML.
            </summary>
            <param name="path">relative path to the file</param>
        </member>
        <member name="M:Triton.Web.View.WebPage.LoadControlXml(System.String,System.String)">
            <summary>
            Loads a control's content XML into the page's content XML.
            </summary>
            <param name="path">section relative path to the xml file</param>
            <param name="section">section to search fro xml file in</param>
        </member>
        <member name="M:Triton.Web.View.WebPage.LoadControlXml(System.String,System.String,System.String)">
            <summary>
            Loads a control's content XML into the page's content XML.
            </summary>
            <param name="path">section relative path to the xml file</param>
            <param name="section">section to search fro xml file in</param>
            <param name="site">site of the xml file to look in</param>
        </member>
        <member name="M:Triton.Web.View.WebPage.LoadControlXml(Triton.Controller.PageFinder.FileRecord)">
            <summary>
            Loads a control's content XML into the page's content XML.
            </summary>
            <param name="record">The record of the file that was found.</param>
        </member>
        <member name="M:Triton.Web.View.WebPage.LoadMasterPage(System.String)">
            <summary>
            Sets the master page according to the file name (without the extension) argument.
            Assumes the master page is in /PagesPath/Version/Site/Section/masterpages/ directory.
            This must be called in the OnPreInit override method at the page level.
            </summary>
            <param name="masterPageName"></param>
        </member>
        <member name="M:Triton.Web.View.WebPage.LoadMasterPage(System.String,System.String)">
            <summary>
            Sets the master page according to the file name (without the extension) argument.
            You set the section name, but site is automaticaly set.
            This must be called in the OnPreInit override method at the page level.
            </summary>
            <param name="masterPageName"></param>
            <param name="section"></param>
        </member>
        <member name="M:Triton.Web.View.WebPage.LoadMasterPage(System.String,System.String,System.String)">
            <summary>
            Sets the master page according to the file name (without the extension) argument.
            Specify the section name and site.
            This must be called in the OnPreInit override method at the page level.
            </summary>
            <param name="masterPageName"></param>
            <param name="section"></param>
            <param name="site"></param>
        </member>
        <member name="M:Triton.Web.View.WebPage.GetCopyContent(System.String)">
            <summary>
            Reads the content XML and finds the copy for the supplied name. if the node is not found then search in the pages section.
            </summary>
            <param name="copyName">Copy XML node name</param>
            <returns></returns>
        </member>
        <member name="M:Triton.Web.View.WebPage.GetCopyContent(System.String,System.Boolean)">
            <summary>
            Reads the content XML and finds the copy for the supplied name. if the node is not found then search in the pages section.
            </summary>
            <param name="copyName">Copy XML node name</param>
            <param name="returnEmptyString">Whether or not to return empty string or not found in xml text.</param>
            <returns></returns>
        </member>
        <member name="M:Triton.Web.View.WebPage.ParseCopy(System.String)">
            <summary>
            Performs any text replacement of items enclosed in square brackets with request parameters of the same name.
            </summary>
            <param name="contentCopy">string - Copy to parse</param>
            <returns>parsed Copy</returns>
        </member>
        <member name="P:Triton.Web.View.WebPage.Request">
            <summary>
            Gets the <b>MvcRequest</b> object for the requested page.
            </summary>
        </member>
        <member name="P:Triton.Web.View.WebPage.Site">
            <summary>
            Gets the site the page is in.
            </summary>
        </member>
        <member name="P:Triton.Web.View.WebPage.Section">
            <summary>
            Gets the section the page is in.
            </summary>
        </member>
        <member name="P:Triton.Web.View.WebPage.Language">
            <summary>
            Gets the language for the content for the page.  Null if content
            is not in a language sub-directory.
            </summary>
        </member>
        <member name="P:Triton.Web.View.WebPage.PageName">
            <summary>
            Get the name of the page.
            </summary>
        </member>
        <member name="P:Triton.Web.View.WebPage.Version">
            <summary>
            Gets the version for the site the page is for.
            </summary>
        </member>
        <member name="P:Triton.Web.View.WebPage.State">
            <summary>
            Gets the <c>State</c> ID of the state the page represents
            (in the state machine).
            </summary>
        </member>
        <member name="P:Triton.Web.View.WebPage.TransitionContext">
            <summary>
            Gets the <c>TransitionContext</c> the page is rendering for.
            </summary>
        </member>
        <member name="P:Triton.Web.View.WebPage.MasterPageSection">
            <summary>
            Gets the masterpage section name, since the masterpage could be in a different section.
            </summary>
        </member>
        <member name="P:Triton.Web.View.WebPage.SectionContentPath">
            <summary>
            Gets the path of the <b>parent</b> content directory of the section
            the page is under.  This path is relative to the application root defined
            by <c>rootPath</c> in web.config.
            </summary>
        </member>
        <member name="P:Triton.Web.View.WebPage.GlobalImagePath">
            <summary>
            Gets the <b>parent</b> directory of the global images directory.
            </summary>
        </member>
        <member name="P:Triton.Web.View.WebPage.ContentXml">
            <summary>
            Gets the <c>XmlDocument</c> that contains the content for the page.
            </summary>
        </member>
        <member name="P:Triton.Web.View.WebPage.Errors">
            <summary>
            Gets an <c>ErrorList</c> of errors returned from the controller.
            </summary>
        </member>
        <member name="P:Triton.Web.View.WebPage.Controller">
            <summary>
            
            </summary>
        </member>
        <member name="P:Triton.Web.View.WebPage.SecureController">
            <summary>
            
            </summary>
        </member>
        <member name="T:Triton.Web.View.Controls.ImgBase">
            <summary>
            Renders an image-based tag using a combination of the page's xml and tag properties from the page.
            </summary>
        </member>
        <member name="M:Triton.Web.View.Controls.BaseControl.GetPath(Triton.Web.View.Controls.BaseControl.PathType,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Standard way of creating file paths in the Framework 
            </summary>
            <param name="type">Use ConfigurableControl.PathType enum</param>
            <param name="filePath">path to process</param>
            <param name="global">non-site specific path</param>
            <param name="useSite">site specific path</param>
            <param name="useDefault"></param>
            <param name="useSection"></param>
            <returns></returns>
        </member>
        <member name="T:Triton.Web.View.Controls.BaseControl.PathType">
            <summary>
            Path Type of the control.
            </summary>
        </member>
        <member name="M:Triton.Web.View.Controls.ConfigurableControl.#ctor">
            <summary>
            Calls the base constructor to render the specified string tag.
            </summary>
        </member>
        <member name="M:Triton.Web.View.Controls.ConfigurableControl.#ctor(System.String)">
            <summary>
            Calls the base constructor to render the specified string tag.
            </summary>
        </member>
        <member name="M:Triton.Web.View.Controls.ConfigurableControl.#ctor(System.Web.UI.HtmlTextWriterTag)">
            <summary>
            Calls the base constructor to render the specified HtmlTextWriterTag tag.
            </summary>
        </member>
        <member name="M:Triton.Web.View.Controls.XmlBasedControl.#ctor">
            <summary>
            Calls the base constructor to render the specified string tag.
            </summary>
        </member>
        <member name="M:Triton.Web.View.Controls.XmlBasedControl.#ctor(System.String)">
            <summary>
            Calls the base constructor to render the specified string tag.
            </summary>
        </member>
        <member name="M:Triton.Web.View.Controls.XmlBasedControl.#ctor(System.Web.UI.HtmlTextWriterTag)">
            <summary>
            Calls the base constructor to render the specified HtmlTextWriterTag tag.
            </summary>
        </member>
        <member name="P:Triton.Web.View.Controls.XmlBasedControl.XmlNodeToRender">
            <summary>
            The xml node that contains all the information about the control.
            </summary>
        </member>
        <member name="F:Triton.Web.View.Controls.ImgBase.attributesToExclude">
            <summary>
            List of attribute names NOT to be copied from the 
            definition in the XML file into the .net image control 
            </summary>
        </member>
        <member name="M:Triton.Web.View.Controls.ImgBase.#ctor(System.String)">
            <summary>
            Calls the base constructor to render the specified string tag.
            </summary>
        </member>
        <member name="M:Triton.Web.View.Controls.ImgBase.#ctor(System.Web.UI.HtmlTextWriterTag)">
            <summary>
            Calls the base constructor to render the specified HtmlTextWriterTag.
            </summary>
        </member>
        <member name="M:Triton.Web.View.Controls.ImgBase.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the controls attributes from the XmlNode.
            </summary>
        </member>
        <member name="P:Triton.Web.View.Controls.ImgBase.Name">
            <summary>
            The name attribute of the Image node in the page's content xml file to use.
            </summary>
        </member>
        <member name="T:Triton.Web.View.Controls.ImgInput">
            <summary>
            Renders an input tag of type image drawing tag values from Content xml .
            </summary>
        </member>
        <member name="M:Triton.Web.View.Controls.ImgInput.#ctor">
            <summary>
            Calls base to render the input tag.
            </summary>
        </member>
        <member name="M:Triton.Web.View.Controls.ImgInput.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            Calls base to render the standard attributes then adds image input tag attributes.
            </summary>
        </member>
        <member name="F:Triton.Web.View.Controls.CssBase.attributesToExclude">
            <summary>
            List of attribute names NOT to be copied from the 
            definition in the XML file into the .net image control 
            also contains the defaulted attributes
            </summary>
        </member>
        <member name="M:Triton.Web.View.Controls.CssBase.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            Needed to override the span tag rendering of the web control, with nothing.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Triton.Web.View.Controls.CssBase.RenderEndTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            Needed to override the span tag rendering of the web control, with nothing.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:Triton.Web.Support.WebInfo">
            <summary>
            <c>WebInfo</c> is a convenience class for getting information about the environment.
            </summary>
            <author>Scott Dyke</author>
        </member>
        <member name="F:Triton.Web.Support.WebInfo.applicationVariables">
            <summary>
            Represents application-level variables typically referenced by Application["key"].
            This exists due to the need to reference HttpContext.Current in global.asax.cs' 
            Application_Start method, which does not exist at that time if a page hasn't been
            referenced yet.
            </summary>
        </member>
        <member name="P:Triton.Web.Support.WebInfo.BasePath">
            <summary>
            Gets the file system path to the application root directory.
            </summary>
        </member>
        <member name="P:Triton.Web.Support.WebInfo.Controller">
            <summary>
            Gets the relative URL to the HTTP controller.
            </summary>
        </member>
        <member name="P:Triton.Web.Support.WebInfo.PagesPath">
            <summary>
            Gets the relative path from the application root to the directory
            containing the pages.
            </summary>
        </member>
        <member name="P:Triton.Web.Support.WebInfo.ContentPath">
            <summary>
            Gets the relative path from the application root to the directory
            containing the page content files.
            </summary>
        </member>
        <member name="P:Triton.Web.Support.WebInfo.DefaultLanguagePath">
            <summary>
            Gets the directory name of the default language.
            </summary>
        </member>
        <member name="P:Triton.Web.Support.WebInfo.ApplicationVariables">
            <summary>
            Represents application-level variables, that would typically be stored in Application["key"].
            </summary>
        </member>
        <member name="T:Triton.Web.View.Controls.Img">
            <summary>
            Renders an image tag.
            </summary>
        </member>
        <member name="M:Triton.Web.View.Controls.Img.#ctor">
            <summary>
            Calls the base constructor to render Img tag on the page.
            </summary>
        </member>
        <member name="T:Triton.Web.View.Controls.Css">
            <summary>
            Builds <c>link</c> tags for Css stylesheets.  Pulls all css from the page's 
            ContentXml and renders them. 
            </summary>
        </member>
        <member name="M:Triton.Web.View.WebMasterPage.LoadMasterPage(System.String)">
            <summary>
            Sets the master page according to the file name (without the extension) argument.
            Assumes the master page is in /PagesPath/Version/Site/Section/masterpages/ directory.
            This must be called in the Page_PreInit override method at the child masterpage level.
            </summary>
            <param name="masterPageName"></param>
        </member>
        <member name="M:Triton.Web.View.WebMasterPage.LoadMasterPage(System.String,System.String)">
            <summary>
            Sets the master page according to the file name (without the extension) argument.
            You set the section name, but site is automaticaly set.
            This must be called in the Page_PreInit override method at the child masterpage level.
            </summary>
            <param name="masterPageName"></param>
            <param name="section"></param>
        </member>
        <member name="M:Triton.Web.View.WebMasterPage.LoadMasterPage(System.String,System.String,System.String)">
            <summary>
            Sets the master page according to the file name (without the extension) argument.
            Specify the section name and site.
            This must be called in the Page_PreInit override method at the child masterpage level.
            </summary>
            <param name="masterPageName"></param>
            <param name="section"></param>
            <param name="site"></param>
        </member>
        <member name="P:Triton.Web.View.WebMasterPage.MasterPageSection">
            <summary>
            Gets the masterpage section name, since the masterpage could be in a different section.
            </summary>
        </member>
        <member name="T:Triton.Web.View.Controls.Errors">
            <summary> Creates markup for errors if they exists. wraps each error in a tag supplied by the control definition
            </summary>
        </member>
        <member name="F:Triton.Web.View.Controls.Errors.minLevel">
            <summary>
            The minimum error level to display.
            </summary>
        </member>
        <member name="F:Triton.Web.View.Controls.Errors.maxLevel">
            <summary>
            The maximum error level to display.
            </summary>
        </member>
        <member name="M:Triton.Web.View.Controls.Errors.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Triton.Web.View.Controls.Errors"/> class.  Creates a default error control with standard initializers
            </summary>
        </member>
        <member name="P:Triton.Web.View.Controls.Errors.ErrorList">
            <summary>
            Gets or sets ErrorList.
            </summary>
        </member>
        <member name="P:Triton.Web.View.Controls.Errors.Class">
            <summary>
            Gets or sets the name of the CSS class used for rendering
            the errors.
            </summary>
        </member>
        <member name="P:Triton.Web.View.Controls.Errors.ErrorTag">
            <summary>
            Gets or sets the delimiter to be used to separate error messages.
            </summary>
        </member>
        <member name="P:Triton.Web.View.Controls.Errors.IncludeId">
            <summary>
            Gets or sets the flag indicating whether or not the error ID is
            to be included with the error message.
            </summary>
        </member>
        <member name="P:Triton.Web.View.Controls.Errors.IncludeFieldName">
            <summary>
            Gets or sets the flag indicating whether or not the field name is
            to be appended to the error message.
            </summary>
        </member>
        <member name="P:Triton.Web.View.Controls.Errors.MinLevel">
            <summary>
            Gets or sets the minimum error level to be displayed.
            </summary>
        </member>
        <member name="P:Triton.Web.View.Controls.Errors.MaxLevel">
            <summary>
            Gets or sets the maximum error level to be displayed.
            </summary>
        </member>
        <member name="F:Triton.Web.View.Controls.Navigation.attributesToExclude">
            <summary>
            List of attribute names NOT to be copied from the 
            definition in the XML file into the .net control 
            </summary>
        </member>
        <member name="M:Triton.Web.View.Controls.Navigation.#ctor">
            <summary>
            Public Default Constructor
            </summary>
        </member>
        <member name="M:Triton.Web.View.Controls.Navigation.OnLoad(System.EventArgs)">
            <summary>
            Using OnLoad because the XML file will not be availiable till this time.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Triton.Web.View.Controls.Navigation.Name">
            <summary>
            If you have more then one Navigation node in your xml, use this to target it.
            </summary>
        </member>
        <member name="P:Triton.Web.View.Controls.Navigation.NoLinkTag">
            <summary>
            Use this property to overwrite the default EM html tag of the items that have no link.
            </summary>
        </member>
        <member name="P:Triton.Web.View.Controls.Navigation.ActivePageTag">
            <summary>
            Use this property to overwrite the default SPAN html tag of the items for the page being viewed.
            </summary>
        </member>
        <member name="T:Triton.Web.View.Controls.Copy">
            <summary>
            Renders a piece of Copy from a matched node in the ContentXml file.
            </summary>
        </member>
        <member name="M:Triton.Web.View.Controls.Copy.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            Finds the Copy in the xml file and renders it to the page.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Triton.Web.View.Controls.Copy.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            Needed to override the span tag rendering of the web control, with nothing.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Triton.Web.View.Controls.Copy.RenderEndTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            Needed to override the span tag rendering of the web control, with nothing.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:Triton.Web.View.Controls.Copy.Name">
            <summary>
            The name of the Copy element from the xml the control is to process.
            </summary>
        </member>
    </members>
</doc>
